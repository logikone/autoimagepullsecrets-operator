apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: dockerregistries.autoimagepullsecrets.io
spec:
  group: autoimagepullsecrets.io
  names:
    kind: DockerRegistry
    listKind: DockerRegistryList
    plural: dockerregistries
    singular: dockerregistry
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: DockerRegistry is the Schema for the dockerregistries API
          type: object
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: DockerRegistrySpec defines the desired state of DockerRegistry
              type: object
              required:
                - authConfig
              properties:
                authConfig:
                  description: AuthConfig contains authorization information for connecting to a Registry
                  type: object
                  properties:
                    identitytoken:
                      description: IdentityToken is used to authenticate the user and get an access token for the registry.
                      type: string
                      format: byte
                    password:
                      type: string
                      format: byte
                    registrytoken:
                      description: RegistryToken is a bearer token to be sent to a registry
                      type: string
                      format: byte
                    serveraddress:
                      type: string
                    username:
                      type: string
                      format: byte
                default:
                  description: Specifies whether or not this registry will be used as the default if no others match
                  type: boolean
                registry:
                  description: Matcher defines match types
                  type: object
                  properties:
                    exact:
                      description: Match string exactly
                      type: string
                    prefix:
                      description: Match strings with prefix
                      type: string
                    regExp:
                      description: Match strings matching a regular expression
                      type: string
                    suffix:
                      description: Match strings with suffix
                      type: string
            status:
              description: DockerRegistryStatus defines the observed state of DockerRegistry
              type: object
      served: true
      storage: true
