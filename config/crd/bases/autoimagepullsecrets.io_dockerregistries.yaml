
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (unknown)
  creationTimestamp: null
  name: dockerregistries.autoimagepullsecrets.io
spec:
  group: autoimagepullsecrets.io
  names:
    kind: DockerRegistry
    listKind: DockerRegistryList
    plural: dockerregistries
    singular: dockerregistry
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DockerRegistry is the Schema for the dockerregistries API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DockerRegistrySpec defines the desired state of DockerRegistry
            properties:
              authConfig:
                description: AuthConfig contains authorization information for connecting
                  to a Registry
                properties:
                  auth:
                    type: string
                  email:
                    description: Email is an optional value associated with the username.
                      This field is deprecated and will be removed in a later version
                      of docker.
                    type: string
                  identitytoken:
                    description: IdentityToken is used to authenticate the user and
                      get an access token for the registry.
                    type: string
                  password:
                    type: string
                  registrytoken:
                    description: RegistryToken is a bearer token to be sent to a registry
                    type: string
                  serveraddress:
                    type: string
                  username:
                    type: string
                type: object
              registry:
                description: Matcher defines match types
                properties:
                  exact:
                    description: Match string exactly
                    type: string
                  prefix:
                    description: Match strings with prefix
                    type: string
                  regExp:
                    description: Match strings matching a regular expression
                    type: string
                  suffix:
                    description: Match strings with suffix
                    type: string
                type: object
            required:
            - authConfig
            type: object
          status:
            description: DockerRegistryStatus defines the observed state of DockerRegistry
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
